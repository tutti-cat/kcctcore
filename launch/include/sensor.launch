<launch>
	<arg name="sim" default="false" />
	<arg name="tf_publish" default="true" />



	<group if="$(arg sim)">
		<node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen" respawn="true">
			<param name="destination_frame" value="camera_link"/>
			<param name="cloud_destination_topic" value="/merged_cloud"/>
			<param name="scan_destination_topic" value="/scan"/>
			<param name="laserscan_topics" value ="/scan1 /scan2"/>
			<param name="angle_min" value="-3.14"/>
			<param name="angle_max" value="3.14"/>
		</node>
	</group>



    <group unless="$(arg sim)">
        
		<node name="serial_node"        pkg="rosserial_python"      type="serial_node.py">
			<param name="port"              type="string"               value="/dev/teensy"/>
			<param name="baud"              type="int"                  value="57600"/>
			</node>
			
			<include file="$(find kcctcore)/launch/sensor/hokuyo/hokuyo_urg_single.launch"/>
			<include file="$(find kcctcore)/launch/sensor/velodyne/velodyne.launch"/>
			<include file="$(find kcctcore)/launch/include/robot_model.launch"/>

			<node name="teensy_handler" pkg="kcctcore" type="teensy_handler">
				<param name="tf_publish" value="$(arg tf_publish)" />
			</node>
			<!--
			<node name="uvc_camera_node" pkg="uvc_camera" type="uvc_camera_node" >
				<remap from="image_raw" to="image_raw"/>
				<param name="device" value="/dev/video4" />
			</node>
			-->
		<!--<include file="$(find kcctcore)/launch/sensor/ublox/gnss.launch"/>-->
    </group>

	<!--laserscanをpointcloud2に変換して配信-->
	<node pkg="kcctcore" name="laser2pc" type="laser2pc" output="screen" />

</launch>
